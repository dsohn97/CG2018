/* Generated by JSIL v0.8.2 build 31050. See http://jsil.org/ for more information. */ 
'use strict';
var $asm25 = JSIL.DeclareAssembly("Tut11_AssetsPicking, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.AssetsPicking */ 

(function AssetsPicking$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.Fusee.Serialization.TransformComponent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffectComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm25.Fusee.Tutorial.Core.SimpleMeshes)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Predicate$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0A.Fusee.Math.Core.float4)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0D.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0D.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm04.Fusee.Engine.Core.SceneRenderer)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm04.Fusee.Engine.Core.ScenePicker)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Comparison$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0A.Fusee.Math.Core.float4x4)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0A.Fusee.Math.Core.float2)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderEffect)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0B.Fusee.Serialization.SceneComponentContainer), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float4, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single, $asm0F.System.Single
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer), $asm0F.System.Predicate$b1.Of($asm0B.Fusee.Serialization.SceneNodeContainer)]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0B.Fusee.Serialization.SceneNodeContainer]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.Fusee.Engine.Core.SceneRenderer, [$asm0B.Fusee.Serialization.SceneContainer]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float4x4, [$asm0A.Fusee.Math.Core.float4x4, $asm0A.Fusee.Math.Core.float4x4]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float2, [$asm0A.Fusee.Math.Core.float2, $asm0A.Fusee.Math.Core.float2]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float2, [$asm0F.System.Single, $asm0F.System.Single]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm04.Fusee.Engine.Core.PickResult, $asm04.Fusee.Engine.Core.PickResult]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")])]))) ();
  };


  function AssetsPicking__ctor () {
    this._camAngle = 0;
    $T00().prototype._ctor.call(this);
  }; 

  function AssetsPicking_CreateScene () {
    var expr_07 = new ($T01())();
    expr_07.Rotation = $S00().Construct(0, 0, 0);
    expr_07.Scale = $S00().Construct(1, 1, 1);
    expr_07.Translation = $S00().Construct(0, 0, 0);
    this._baseTransform = expr_07;
    var expr_5F = new ($T03())();
    var expr_65 = $S01().Construct();
    var expr_6B = new ($T05())();
    var expr_71 = $S02().Construct();
    expr_71.Add(this._baseTransform);
    var expr_84 = new ($T07())();
    expr_84.ShaderEffectComponent$Effect$value = $T08().MakeShaderEffect($S00().Construct(0.7, 0.7, 0.7), $S00().Construct(1, 1, 1), 5);
    expr_71.Add(expr_84);
    expr_71.Add($T08().CreateCuboid($S00().Construct(10, 10, 10)));
    expr_6B.Components = expr_71;
    expr_65.Add(expr_6B);
    expr_5F.Children = expr_65;
    return expr_5F;
  }; 

  function AssetsPicking_Init () {
    var arg_61_1 = null, arg_AF_1 = null, arg_FD_1 = null, arg_14B_1 = null, arg_199_1 = null, arg_1E7_1 = null, arg_235_1 = null, arg_283_1 = null;
    (this.RenderCanvas$RC$value.ClearColor = $S03().Construct(0.8, 0.9, 0.7, 1));
    this._scene = $T0C().Get$b1($T03())("tank.fus");
    var arg_61_0 = this._scene.Children;
    if ((arg_61_1 = $T0E().$l$g9__16_0) === null) {
      arg_61_1 = $T0E().$l$g9__16_0 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_0", $S04(), false, false));
    }
    var expr_66 = $S05().CallStatic($T0F(), "FindNodes", null, arg_61_0, arg_61_1);
    if (expr_66 === null) {
      var arg_7F_1 = null;
    } else {
      var expr_72 = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_66);
      arg_7F_1 = (
        (expr_72 !== null)
           ? $T11().GetTransform(expr_72, 0)
           : null)
      ;
    }
    this._rightRearTransform = arg_7F_1;
    var arg_AF_0 = this._scene.Children;
    if ((arg_AF_1 = $T0E().$l$g9__16_1) === null) {
      arg_AF_1 = $T0E().$l$g9__16_1 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_1", $S07(), false, false));
    }
    var expr_B4 = $S05().CallStatic($T0F(), "FindNodes", null, arg_AF_0, arg_AF_1);
    if (expr_B4 === null) {
      var arg_CD_1 = null;
    } else {
      var expr_C0 = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_B4);
      arg_CD_1 = (
        (expr_C0 !== null)
           ? $T11().GetTransform(expr_C0, 0)
           : null)
      ;
    }
    this._leftRearTransform = arg_CD_1;
    var arg_FD_0 = this._scene.Children;
    if ((arg_FD_1 = $T0E().$l$g9__16_2) === null) {
      arg_FD_1 = $T0E().$l$g9__16_2 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_2", $S08(), false, false));
    }
    var expr_102 = $S05().CallStatic($T0F(), "FindNodes", null, arg_FD_0, arg_FD_1);
    if (expr_102 === null) {
      var arg_11B_1 = null;
    } else {
      var expr_10E = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_102);
      arg_11B_1 = (
        (expr_10E !== null)
           ? $T11().GetTransform(expr_10E, 0)
           : null)
      ;
    }
    this._rightMiddleTransform = arg_11B_1;
    var arg_14B_0 = this._scene.Children;
    if ((arg_14B_1 = $T0E().$l$g9__16_3) === null) {
      arg_14B_1 = $T0E().$l$g9__16_3 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_3", $S09(), false, false));
    }
    var expr_150 = $S05().CallStatic($T0F(), "FindNodes", null, arg_14B_0, arg_14B_1);
    if (expr_150 === null) {
      var arg_169_1 = null;
    } else {
      var expr_15C = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_150);
      arg_169_1 = (
        (expr_15C !== null)
           ? $T11().GetTransform(expr_15C, 0)
           : null)
      ;
    }
    this._leftMiddleTransform = arg_169_1;
    var arg_199_0 = this._scene.Children;
    if ((arg_199_1 = $T0E().$l$g9__16_4) === null) {
      arg_199_1 = $T0E().$l$g9__16_4 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_4", $S0A(), false, false));
    }
    var expr_19E = $S05().CallStatic($T0F(), "FindNodes", null, arg_199_0, arg_199_1);
    if (expr_19E === null) {
      var arg_1B7_1 = null;
    } else {
      var expr_1AA = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_19E);
      arg_1B7_1 = (
        (expr_1AA !== null)
           ? $T11().GetTransform(expr_1AA, 0)
           : null)
      ;
    }
    this._rightFrontTransform = arg_1B7_1;
    var arg_1E7_0 = this._scene.Children;
    if ((arg_1E7_1 = $T0E().$l$g9__16_5) === null) {
      arg_1E7_1 = $T0E().$l$g9__16_5 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_5", $S0B(), false, false));
    }
    var expr_1EC = $S05().CallStatic($T0F(), "FindNodes", null, arg_1E7_0, arg_1E7_1);
    if (expr_1EC === null) {
      var arg_205_1 = null;
    } else {
      var expr_1F8 = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_1EC);
      arg_205_1 = (
        (expr_1F8 !== null)
           ? $T11().GetTransform(expr_1F8, 0)
           : null)
      ;
    }
    this._leftFrontTransform = arg_205_1;
    var arg_235_0 = this._scene.Children;
    if ((arg_235_1 = $T0E().$l$g9__16_6) === null) {
      arg_235_1 = $T0E().$l$g9__16_6 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_6", $S0C(), false, false));
    }
    var expr_23A = $S05().CallStatic($T0F(), "FindNodes", null, arg_235_0, arg_235_1);
    if (expr_23A === null) {
      var arg_253_1 = null;
    } else {
      var expr_246 = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_23A);
      arg_253_1 = (
        (expr_246 !== null)
           ? $T11().GetTransform(expr_246, 0)
           : null)
      ;
    }
    this._towerTransform = arg_253_1;
    var arg_283_0 = this._scene.Children;
    if ((arg_283_1 = $T0E().$l$g9__16_7) === null) {
      arg_283_1 = $T0E().$l$g9__16_7 = $T09().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lInit$gb__16_7", $S0D(), false, false));
    }
    var expr_288 = $S05().CallStatic($T0F(), "FindNodes", null, arg_283_0, arg_283_1);
    if (expr_288 === null) {
      var arg_2A1_1 = null;
    } else {
      var expr_294 = $S06().CallStatic($T10(), "FirstOrDefault$b1", [$asm0B.Fusee.Serialization.SceneNodeContainer], expr_288);
      arg_2A1_1 = (
        (expr_294 !== null)
           ? $T11().GetTransform(expr_294, 0)
           : null)
      ;
    }
    this._turretTransform = arg_2A1_1;
    this._sceneRenderer = $S0E().Construct(this._scene);
    this._scenePicker = new ($T13())(this._scene);
  }; 

  function AssetsPicking_RenderAFrame () {
    var arg_125_1 = null;
    (this.RenderCanvas$RC$value).Clear($T15().$Flags("Color", "Depth"));
    this._camAngle = +this._camAngle + (0.34906587 * +((+$T16().get_DeltaTime() / 2)));
    (this.RenderCanvas$RC$value.View = $S0F().CallStatic($T17(), "op_Multiply", null, 
        $T17().CreateTranslation(0, 0, 25).MemberwiseClone(), 
        $T17().CreateRotationY(this._camAngle).MemberwiseClone()
      ).MemberwiseClone());
    var leftButton = $T1A().get_Mouse().get_LeftButton();
    if (leftButton) {
      var pickPos = $T1B().op_Addition($S10().CallStatic($T1B(), "op_Multiply", null, 
          $T1A().get_Mouse().get_Position().MemberwiseClone(), 
          $S11().Construct(+((2 / +(this.get_Width()))), +((-2 / +(this.get_Height()))))
        ).MemberwiseClone(), $S11().Construct(-1, 1)).MemberwiseClone();
      this._scenePicker.View = (this.RenderCanvas$RC$value).get_View().MemberwiseClone();
      this._scenePicker.Projection = (this.RenderCanvas$RC$value).get_Projection().MemberwiseClone();
      var list = $T10().ToList$b1($T1D())((this._scenePicker).Pick(pickPos.MemberwiseClone()));
      var pickResult = null;
      var flag = (list.get_Count() | 0) > 0;
      if (flag) {
        if ((arg_125_1 = $T0E().$l$g9__17_0) === null) {
          arg_125_1 = $T0E().$l$g9__17_0 = $T14().New($T0E().$l$g9, null, new JSIL.MethodPointerInfo($asm25.Fusee.Tutorial.Core.AssetsPicking_$l$gc, "$lRenderAFrame$gb__17_0", $S12(), false, false));
        }
        $S13().Call($T1C().prototype, "Sort", null, list, arg_125_1);
        pickResult = list.get_Item(0);
      }
      var arg_152_0 = (
        (pickResult !== null)
           ? pickResult.Node
           : null)
      ;
      var expr_146 = this._currentPick;
      var flag2 = arg_152_0 !== (
        (expr_146 !== null)
           ? expr_146.Node
           : null)
      ;
      if (flag2) {
        if (this._currentPick !== null) {
          var component = $T11().GetComponent$b1($T07())(this._currentPick.Node, 0);
          (component.ShaderEffectComponent$Effect$value).SetEffectParam("DiffuseColor", this._oldColor.MemberwiseClone());
        }
        var flag4 = pickResult !== null;
        if (flag4) {
          var component2 = $T11().GetComponent$b1($T07())(pickResult.Node, 0);
          this._oldColor = $T02().$Cast((component2.ShaderEffectComponent$Effect$value).GetEffectParam("DiffuseColor")).MemberwiseClone();
          (component2.ShaderEffectComponent$Effect$value).SetEffectParam("DiffuseColor", $S00().Construct(1, 0, 1));
        }
        this._currentPick = pickResult;
      }
    }
    var expr_212 = this._currentPick;
    var flag5 = ((
        (expr_212 !== null)
           ? expr_212.Node.Name
           : null)
       == "Tower");
    if (flag5) {
      var num = +this._towerTransform.Rotation.y;
      num += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_ADAxis();
      this._towerTransform.Rotation = $S00().Construct(0, num, 0);
    } else {
      var expr_28C = this._currentPick;
      var flag6 = ((
          (expr_28C !== null)
             ? expr_28C.Node.Name
             : null)
         == "turret");
      if (!flag6) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              var expr_2BA = this._currentPick;
              if (!((
                    (expr_2BA !== null)
                       ? expr_2BA.Node.Name
                       : null)
                   == "WRB")) {
                var expr_2DD = this._currentPick;
                if (!((
                      (expr_2DD !== null)
                         ? expr_2DD.Node.Name
                         : null)
                     == "WRM")) {
                  var expr_300 = this._currentPick;
                  var arg_31E_0 = ((
                      (expr_300 !== null)
                         ? expr_300.Node.Name
                         : null)
                     == "WRF");
                  $label0 = 1 /* goto IL_31E */ ;
                  continue $labelgroup0;
                }
              }
              arg_31E_0 = true;

              $label0 = 1 /* goto IL_31E */ ;
              continue $labelgroup0;
            case 1: /* IL_31E */ 
              var flag7 = arg_31E_0;
              if (flag7) {
                var num2 = +this._rightRearTransform.Rotation.y;
                num2 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                this._rightRearTransform.Rotation = $S00().Construct(0, num2, 0);
                var num3 = +this._rightMiddleTransform.Rotation.y;
                num3 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                this._rightMiddleTransform.Rotation = $S00().Construct(0, num3, 0);
                var num4 = +this._rightFrontTransform.Rotation.y;
                num4 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                this._rightFrontTransform.Rotation = $S00().Construct(0, num4, 0);
              } else {

                var $label1 = 0;
              $labelgroup1: 
                while (true) {
                  switch ($label1) {
                    case 0: /* $entry1 */ 
                      var expr_418 = this._currentPick;
                      if (!((
                            (expr_418 !== null)
                               ? expr_418.Node.Name
                               : null)
                           == "WLB")) {
                        var expr_43B = this._currentPick;
                        if (!((
                              (expr_43B !== null)
                                 ? expr_43B.Node.Name
                                 : null)
                             == "WLM")) {
                          var expr_45E = this._currentPick;
                          var arg_47C_0 = ((
                              (expr_45E !== null)
                                 ? expr_45E.Node.Name
                                 : null)
                             == "WLF");
                          $label1 = 1 /* goto IL_47C */ ;
                          continue $labelgroup1;
                        }
                      }
                      arg_47C_0 = true;

                      $label1 = 1 /* goto IL_47C */ ;
                      continue $labelgroup1;
                    case 1: /* IL_47C */ 
                      var flag8 = arg_47C_0;
                      if (flag8) {
                        var num5 = +this._leftRearTransform.Rotation.y;
                        num5 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                        this._leftRearTransform.Rotation = $S00().Construct(0, num5, 0);
                        var num6 = +this._leftMiddleTransform.Rotation.y;
                        num6 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                        this._leftMiddleTransform.Rotation = $S00().Construct(0, num6, 0);
                        var num7 = +this._leftFrontTransform.Rotation.y;
                        num7 += (2 * +$T16().get_DeltaTime()) * +$T1A().get_Keyboard().get_WSAxis();
                        this._leftFrontTransform.Rotation = $S00().Construct(0, num7, 0);
                      }
                      break $labelgroup1;

                  }
                }
              }

              break $labelgroup0;
          }
        }
      }
    }
    (this._sceneRenderer).Render(this.RenderCanvas$RC$value);
    this.Present();
  }; 

  function AssetsPicking_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T17().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.AssetsPicking", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AssetsPicking__ctor
    );

    $.Method({Static:false, Public:false}, "CreateScene", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("Fusee.Serialization.SceneContainer")), 
      AssetsPicking_CreateScene
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      AssetsPicking_Resize
    );

    $.Field({Static:false, Public:false}, "_scene", $asm0B.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_scenePicker", $asm04.TypeRef("Fusee.Engine.Core.ScenePicker"));

    $.Field({Static:false, Public:false}, "_currentPick", $asm04.TypeRef("Fusee.Engine.Core.PickResult"));

    $.Field({Static:false, Public:false}, "_oldColor", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "_baseTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightRearTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightMiddleTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_rightFrontTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_leftFrontTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_leftMiddleTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_leftRearTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_turretTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_towerTransform", $asm0B.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_camAngle", $.Single);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.AssetsPicking+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Single]))) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__16_0 (node) {
    return node.Name == "WRB";
  }; 

  function $l$gc_$lInit$gb__16_1 (node) {
    return node.Name == "WLB";
  }; 

  function $l$gc_$lInit$gb__16_2 (node) {
    return node.Name == "WRM";
  }; 

  function $l$gc_$lInit$gb__16_3 (node) {
    return node.Name == "WLM";
  }; 

  function $l$gc_$lInit$gb__16_4 (node) {
    return node.Name == "WRF";
  }; 

  function $l$gc_$lInit$gb__16_5 (node) {
    return node.Name == "WLF";
  }; 

  function $l$gc_$lInit$gb__16_6 (node) {
    return node.Name == "Tower";
  }; 

  function $l$gc_$lInit$gb__16_7 (node) {
    return node.Name == "turret";
  }; 

  function $l$gc_$lRenderAFrame$gb__17_0 (a, b) {
    return $S00().CallStatic($T03(), "Sign", null, +a.get_ClipPos().z - +b.get_ClipPos().z);
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.AssetsPicking+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_0", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_0
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_1", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_1
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_2", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_2
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_3", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_3
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_4", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_4
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_5", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_5
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_6", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_6
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__16_7", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__16_7
    );

    $.Method({Static:false, Public:false}, "$lRenderAFrame$gb__17_0", 
      new JSIL.MethodSignature($.Int32, [$asm04.TypeRef("Fusee.Engine.Core.PickResult"), $asm04.TypeRef("Fusee.Engine.Core.PickResult")]), 
      $l$gc_$lRenderAFrame$gb__17_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__16_0", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_1", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_2", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_3", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_4", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_5", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_6", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__16_7", $asm0F.TypeRef("System.Predicate`1", [$asm0B.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__17_0", $asm0F.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.SimpleMeshes */ 

(function SimpleMeshes$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.Fusee.Serialization.Mesh)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.UInt16)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0A.Fusee.Math.Core.float2)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0A.Fusee.Math.Core.AABBf)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm0F.System.UInt16))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0A.Fusee.Math.Core.M)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0B.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0B.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.ShaderCodeBuilder)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotImplementedException, null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float2, [$asm0F.System.Single, $asm0F.System.Single]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0F.System.Single, $asm0A.Fusee.Math.Core.float3]))) ();
  };


  function SimpleMeshes_CreateCone (radius, height, segments) {
    return $thisType.CreateConeFrustum(radius, 0, height, segments);
  }; 

  function SimpleMeshes_CreateConeFrustum (radiuslower, radiusupper, height, segments) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateCuboid (size) {
    var mesh = new ($T04())();
    mesh.set_Vertices(JSIL.Array.New($T03(), [$S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z))]));
    mesh.set_Normals(JSIL.Array.New($T03(), [$S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1)]));
    mesh.set_Triangles(JSIL.Array.New($T05(), [0, 6, 3, 3, 6, 9, 2, 14, 20, 2, 20, 8, 12, 15, 18, 15, 21, 18, 5, 11, 17, 17, 11, 23, 7, 22, 10, 7, 19, 22, 1, 4, 16, 1, 16, 13]));
    mesh.set_UVs(JSIL.Array.New($T06(), [$S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(0, 1)]));
    mesh.BoundingBox = new ($T07())($S03().CallStatic($T03(), "op_Multiply", null, -0.5, size.MemberwiseClone()).MemberwiseClone(), $S03().CallStatic($T03(), "op_Multiply", null, 0.5, size.MemberwiseClone()).MemberwiseClone());
    return mesh;
  }; 

  function SimpleMeshes_CreateCylinder (radius, height, segments) {
    var array = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array2 = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array3 = JSIL.Array.New($T05(), Math.imul(segments, 3));
    var num = +((6.28318548 / +segments));
    array[segments] = $T03().Zero.MemberwiseClone();
    array2[segments] = $T03().UnitY.MemberwiseClone();
    array[0] = $S01().Construct(radius, 0, 0);
    array2[0] = $T03().UnitY.MemberwiseClone();

    for (var i = 1; i < (segments | 0); i = ((i + 1) | 0)) {
      array[i] = $S01().Construct((+radius * +$T0A().Cos(+i * num)), 0, (+radius * +$T0A().Sin(+i * num)));
      array2[i] = $T03().UnitY.MemberwiseClone();
      array3[((Math.imul(3, i) - 1) | 0)] = (segments & 0xFFFF);
      array3[((Math.imul(3, i) - 2) | 0)] = (i & 0xFFFF);
      array3[((Math.imul(3, i) - 3) | 0)] = (((i - 1) | 0) & 0xFFFF);
    }
    array3[((Math.imul(3, segments) - 1) | 0)] = (segments & 0xFFFF);
    array3[((Math.imul(3, segments) - 2) | 0)] = 0;
    array3[((Math.imul(3, segments) - 3) | 0)] = ((((segments | 0) - 1) | 0) & 0xFFFF);
    var expr_F2 = new ($T04())();
    expr_F2.set_Vertices(array);
    expr_F2.set_Normals(array2);
    expr_F2.set_Triangles(array3);
    return expr_F2;
  }; 

  function SimpleMeshes_CreatePyramid (baselen, height) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTetrahedron (edgelen) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTorus (mainradius, segradius, segments, slices) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_MakeShaderEffect (diffuseColor, specularColor, shininess) {
    var expr_06 = new ($T0B())();
    var expr_0C = new ($T0C())();
    expr_0C.Color = diffuseColor.MemberwiseClone();
    expr_06.Diffuse = expr_0C;
    var expr_1E = new ($T0D())();
    expr_1E.Color = specularColor.MemberwiseClone();
    expr_1E.Shininess = +shininess;
    expr_06.Specular = expr_1E;
    return $T0E().MakeShaderEffectFromMatComp(expr_06, null);
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.SimpleMeshes", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CreateCone", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCone
    );

    $.Method({Static:true , Public:true }, "CreateConeFrustum", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Single, $.Int32
        ]), 
      SimpleMeshes_CreateConeFrustum
    );

    $.Method({Static:true , Public:true }, "CreateCuboid", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$asm0A.TypeRef("Fusee.Math.Core.float3")]), 
      SimpleMeshes_CreateCuboid
    );

    $.Method({Static:true , Public:true }, "CreateCylinder", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCylinder
    );

    $.Method({Static:true , Public:true }, "CreatePyramid", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$.Single, $.Single]), 
      SimpleMeshes_CreatePyramid
    );

    $.Method({Static:true , Public:true }, "CreateTetrahedron", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [$.Single]), 
      SimpleMeshes_CreateTetrahedron
    );

    $.Method({Static:true , Public:true }, "CreateTorus", 
      new JSIL.MethodSignature($asm0B.TypeRef("Fusee.Serialization.Mesh"), [
          $.Single, $.Single, 
          $.Int32, $.Int32
        ]), 
      SimpleMeshes_CreateTorus
    );

    $.Method({Static:true , Public:true }, "MakeShaderEffect", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.ShaderEffect"), [
          $asm0A.TypeRef("Fusee.Math.Core.float3"), $asm0A.TypeRef("Fusee.Math.Core.float3"), 
          $.Single
        ]), 
      SimpleMeshes_MakeShaderEffect
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class <PrivateImplementationDetails> */ 

(function $lPrivateImplementationDetails$g$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "<PrivateImplementationDetails>", 
      IsPublic: false, 
      IsReferenceType: true, 
    }, function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0F.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

